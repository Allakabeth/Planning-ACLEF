import { createClient } from '@supabase/supabase-js'

const supabaseUrl = 'https://mkbchdhbgdynxwfhpxbw.supabase.co'
const supabaseKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im1rYmNoZGhiZ2R5bnh3ZmhweGJ3Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTUxMTQ5OTYsImV4cCI6MjA3MDY5MDk5Nn0.vvJBJtX9H1vakOwqhDEt_yYJcp_giBY50PMggJ7YZic'

const supabase = createClient(supabaseUrl, supabaseKey)

console.log('üîç TEST CONNEXION FORMATEUR - AUDA WELSCH\n')

// 1. Trouver Auda
const { data: users } = await supabase
  .from('users')
  .select('*')
  .ilike('nom', '%welsch%')
  .eq('role', 'formateur')

const auda = users[0]
console.log(`‚úÖ Auda trouv√©e:`)
console.log(`  Pr√©nom: ${auda.prenom}`)
console.log(`  Nom: ${auda.nom}`)
console.log(`  ID: ${auda.id}`)
console.log(`  Email: ${auda.email || 'Pas d\'email'}`)
console.log(`  Archiv√©: ${auda.archive ? '‚ùå' : '‚úÖ Non'}`)
console.log(`  Password hash: ${auda.password_hash ? 'Existe' : 'Vide'}`)

console.log('\nüìã IDENTIFIANTS DE CONNEXION:')
console.log('  Username: auda (pr√©nom en minuscules)')
console.log('  Password: welsch (nom en minuscules pour premi√®re connexion)')

if (auda.password_hash) {
  console.log('  ‚ö†Ô∏è  Un mot de passe personnalis√© existe d√©j√†')
}

console.log('\nüîß SOLUTION POUR CR√âER LE PLANNING TYPE:')
console.log('1. Auda doit se connecter sur /formateur/login')
console.log('2. Aller dans "Mon planning type"')
console.log('3. D√©clarer ses disponibilit√©s pour chaque jour')
console.log('4. Cliquer sur "Enregistrer et envoyer"')
console.log('5. L\'admin pourra ensuite valider dans "Valider planning formateurs"')

console.log('\nüí° ALTERNATIVE - CR√âATION MANUELLE PAR ADMIN:')
console.log('Je peux cr√©er un script pour ins√©rer directement le planning type d\'Auda')
console.log('Voulez-vous que je cr√©e ses disponibilit√©s mardi ?')

process.exit(0)